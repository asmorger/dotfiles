- name: Apply macOS tasks
  vars:
    install_homebrew_if_missing: true
  block:
    - name: Set HomeBrew path
      ansible.builtin.set_fact:
        homebrew_path: /usr/local/bin/brew
      when: ansible_architecture != "arm64"

    - name: Set HomeBrew path
      ansible.builtin.set_fact:
        homebrew_path: /opt/homebrew/bin
      when: ansible_architecture == "arm64"

    - name: Ensuring Homebrew Is Installed
      ansible.builtin.stat:
        path: "{{ homebrew_path  }}"
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      ansible.builtin.fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing|bool

    - name: Installing Homebrew
      ansible.builtin.command: >
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing|bool

- name: Apply macOS Homebrew tasks
  vars:
    upgrade_homebrew_packages: true
    update_homebrew: true
  block:
    - name: Updating Homebrew
      community.general.packaging.os.homebrew:
        update_homebrew: "{{ update_homebrew }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      community.general.packaging.os.homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Taps
      community.general.packaging.os.homebrew_tap:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      register: result
      until: result is successful
      loop: "{{ brew_taps }}"
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Cask Packages
      community.general.packaging.os.homebrew_cask:
        name: "{{ brew_cask_packages_install }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Uninstall Homebrew Cask Packages
      community.general.packaging.os.homebrew_cask:
        name: "{{ brew_cask_packages_uninstall }}"
        state: absent
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Packages
      community.general.packaging.os.homebrew:
        name: "{{ brew_packages_install }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Uninstall Homebrew Packages
      community.general.packaging.os.homebrew:
        name: "{{ brew_packages_uninstall }}"
        state: absent
      register: result
      until: result is successful
      when: homebrew_check.stat.exists


- name: Macbook Software
  gather_facts: False
  tasks:
    - name: Ensures taps are present via homebrew
      community.general.homebrew_tap:
        name: "{{ item }}"
        state: present
      with_items:
        - hashicorp/tap

    - name: Ensures packages are present via homebrew cask
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
        # install_options: 'appdir=/Applications'
        loop: 
      with_items:
        - visual-studio-code
        - spotify
        - microsoft-edge
        - warp

    - name: Ensures packages are present via homebrew
      community.general.homebrew:
        name: "{{ item }}"
        path: "/Applications"
        state: present
      with_items:
        # global dependencies
        - git
        - fish
        - fzf
        - ripgrep
        - eza
        - bat
        - btop
        - starship
        - stow
        - curl
        - jq
        - unzip
        - 1password
        - jetbrains-toolbox
        - fd
        - docker
        - docker-compose
        - lazydocker
        - lazygit
        - caddy

        # OS tools
        - karabiner-elements
        - raycast
        - koekeishiya/formulae/yabai
        - koekeishiya/formulae/skhd
        - keycastr
        - shortcat
        - zed

        # Dev Tools
        - gleam
        - elixir

      ignore_errors: yes
      tags:
        - packages

# Things to manually install:
# - Hand mirror
# - Spaceman